if (Parse == null) var Parse = require('parse').Parse;

var BUSINESS_TABLE = 'Business';
var REWARDS_TABLE = 'Reward';
var INTERVAL_TABLE = 'NEW_IntervalRecord';
var INTERVAL_RECORD_TABLE = 'NEW_IntervalRecord';

/*
args list format:
{ 'arg1': arg1Obj, 'arg2': arg2Obj }

success callback format:
  function (object) {
    ...
  }

failure callback format:
  function (object, error) {
    ...
    console.log(error.message);
  }

*/

// arguments must include user object
var retrieveBusiness = function (successCb, failureCb, args) {
  var user = args['user'];

  var BusinessObj = Parse.Object.extend(BUSINESS_TABLE);
  var businessQuery = new Parse.Query(BusinessObj);

  businessQuery.equalTo('owner', user);
  businessQuery.first({
    success: successCb,
    error: failureCb
  })
}

// arguments must include business object
var retrieveRewards = function (successCb, failureCb, args) {
  var business = args['business'];

  var RewardObj = Parse.Object.extend(REWARDS_TABLE);
  var rewardQuery = new Parse.Query(RewardObj);

  rewardQuery.equalTo('business', business);

  rewardQuery.find({
    success: successCb,
    error: failureCb
  });
}


// arguments must include interval object for a user
var retrieveIntervalJSON = function (successCb, failureCb, args) {
  var user = args['user'];

  var retBusSuccess = function (business) {
    var IntervalObj = Parse.Object.extend();
    var intervalQuery = new Parse.Query(INTERVAL_TABLE);

    intervalQuery.equalTo('business', business);

    var intervalSuccess = function (interval) {
      console.log(interval);
      res.json({}); // TODO: need to populate
    }

    var intervalFailure = function (interval, error) {
      console.log(error.message);
      res.status(400).json({});
    }

    intervalQuery.find({
      success: intervalSuccess,
      error: intervalFailure
    })
  }

  var retBusFailure = function (business, error) {
    console.log(error.message);
  }

  retrieveBusiness(retBusSuccess, retBusFailure, {'user': user});


  var IntervalRecordObj = Parse.Object.extend(BUSINESS_TABLE);
  var intervalRecordQuery = new Parse.Query(IntervalRecordObj);


}

// arguments must include 
var retrieveIntervalRecords = function (successCb, failureCb, args) {
    var IntervalRecordObj = Parse.Object.extend(INTERVAL_RECORD_TABLE);
    var intervalRecordQuery = new Parse.Query(IntervalRecordObj);
}

exports.retrieveBusiness = retrieveBusiness;
exports.retrieveRewards = retrieveRewards;